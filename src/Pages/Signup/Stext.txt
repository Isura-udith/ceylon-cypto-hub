import React, {useState} from "react";

const Signup = () => {


  const mybackendurl = 'http://localhost:5000';

  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [name, setName] = useState('');
  const [phone, setPhone] = useState('');
  const [error, setError] = useState('');

  const handleRegister = async () => {
    if (password.length < 6) {
      setError('Password must be at least 6 characters long');
      return;
    }

    try {
      let res = await fetch(mybackendurl + '/signup', {
        method: 'POST',
        body: JSON.stringify({ email, password, name }),
        headers: {
          'Content-Type': 'application/json',
        },
      });

      let result = await res.json();
      console.log(result);

      if (res.ok) {
        alert('User registered successfully');
        setEmail('');
        setPassword('');
        setName('');
        setPhone('');
        setError('');
      } else {
        setError(result.message);
      }
    } catch (error) {
      console.error('Failed to fetch:', error);
      setError('Failed to register. Please try again.');
    }
  };
    
  return (
    <div className="h-[100vh] items-center flex justify-center px-5 lg:px-0">
      <div className="flex justify-center flex-1 max-w-screen-xl bg-white border shadow sm:rounded-lg">
        <div className="flex-1 hidden text-center bg-blue-900 md:flex">
          <div
            className="w-full m-12 bg-center bg-no-repeat bg-contain xl:m-16"
            style={{
              backgroundImage: `url(https://www.tailwindtap.com/assets/common/marketing.svg)`,
            }}
          ></div>
        </div>
        <div className="p-6 lg:w-1/2 xl:w-5/12 sm:p-12">
          <div className="flex flex-col items-center ">
            <div className="text-center">
              <h1 className="text-2xl font-extrabold text-blue-900 xl:text-4xl">
                Student Sign up
              </h1>
              <p className="text-[12px] text-gray-500">
                Hey enter your details to create your account
              </p>
            </div>
            <div className="flex-1 w-full mt-8">
              <div className="flex flex-col max-w-xs gap-4 mx-auto">

              {error && <p style={{ color: 'red' }}>{error}</p>}
                
                <input
                  className="w-full px-5 py-3 text-sm font-medium placeholder-gray-500 bg-gray-100 border border-gray-200 rounded-lg focus:outline-none focus:border-gray-400 focus:bg-white"
                  type="name"
                  placeholder="Enter your name"
                  value={name}
                  onChange={(e) => setName(e.target.value)}
                />
                
                <input
                  className="w-full px-5 py-3 text-sm font-medium placeholder-gray-500 bg-gray-100 border border-gray-200 rounded-lg focus:outline-none focus:border-gray-400 focus:bg-white"
                  type="email"
                  placeholder="Enter your email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                />
                
                <input
                  className="w-full px-5 py-3 text-sm font-medium placeholder-gray-500 bg-gray-100 border border-gray-200 rounded-lg focus:outline-none focus:border-gray-400 focus:bg-white"
                  type="tel"
                  placeholder="Enter your phone"
                  value={phone}
                  onChange={(e) => setPhone(e.target.value)}
                />
                
                <input
                  className="w-full px-5 py-3 text-sm font-medium placeholder-gray-500 bg-gray-100 border border-gray-200 rounded-lg focus:outline-none focus:border-gray-400 focus:bg-white"
                  type="password"
                  placeholder="Password"
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                />
                
                <button onClick={handleRegister} className="flex items-center justify-center w-full py-4 mt-5 font-semibold tracking-wide text-gray-100 transition-all duration-300 ease-in-out bg-blue-900 rounded-lg hover:bg-indigo-700 focus:shadow-outline focus:outline-none">
                  <svg
                    className="w-6 h-6 -ml-2"
                    fill="none"
                    stroke="currentColor"
                    stroke-width="2"
                    strokeLinecap="round"
                    stroke-linejoin="round"
                  >
                    <path d="M16 21v-2a4 4 0 00-4-4H5a4 4 0 00-4 4v2" />
                    <circle cx="8.5" cy="7" r="4" />
                    <path d="M20 8v6M23 11h-6" />
                  </svg>
                  <span className="ml-3">Sign Up</span>
                </button>
                
                <p className="mt-6 text-xs text-center text-gray-600">
                  Already have an account?{" "}
                  <a href="./Login/Login.jsx">
                    <span className="font-semibold text-blue-900">Sign in</span>
                  </a>
                </p>
                
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};
export default Signup;





import React, { useState } from 'react';

const Signup = () => {
  const mybackendurl = 'http://localhost:5000';

  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [name, setName] = useState('');
  const [error, setError] = useState('');

  const handleRegister = async () => {
    if (password.length < 6) {
      setError('Password must be at least 6 characters long');
      return;
    }

    try {
      let res = await fetch(mybackendurl + '/signup', {
        method: 'POST',
        body: JSON.stringify({ email, password, name }),
        headers: {
          'Content-Type': 'application/json',
        },
      });

      let result = await res.json();
      console.log(result);

      if (res.ok) {
        alert('User registered successfully');
        setEmail('');
        setPassword('');
        setName('');
        setError('');
      } else {
        setError(result.message);
      }
    } catch (error) {
      console.error('Failed to fetch:', error);
      setError('Failed to register. Please try again.');
    }
  };

  return (
    <div>
      <h1>Signup</h1>
      {error && <p style={{ color: 'red' }}>{error}</p>}
      <input
        type="email"
        value={email}
        onChange={(e) => setEmail(e.target.value)}
        style={{ color: 'black' }}
        placeholder="Email"
      />
      <br />
      <input
        type="password"
        value={password}
        onChange={(e) => setPassword(e.target.value)}
        style={{ color: 'black' }}
        placeholder="Password"
      />
      <br />
      <input
        type="name"
        value={name}
        onChange={(e) => setName(e.target.value)}
        style={{ color: 'black' }}
        placeholder="Name"
      />
      <br />
      <button onClick={handleRegister}>Register</button>
    </div>
  );
};

export default Signup;


*****login***


import React from "react";
import { Link } from "react-router-dom";

const LoginWithGoogleButton = () => {
  return (
    <div className="flex items-center justify-center w-full h-screen px-5 sm:px-0">
      <div className="flex w-full max-w-sm overflow-hidden bg-white border rounded-lg shadow-lg lg:max-w-4xl">
        <div
          className="hidden bg-blue-700 bg-cover md:block lg:w-1/2"
          style={{
            backgroundImage: `url(https://img.freepik.com/free-vector/modern-bitcoin-design_1035-9520.jpg?w=740&t=st=1720650068~exp=1720650668~hmac=1adf07838aa0114ebf1bb2632019e33ede3dcf6f77d2b9eae719fb8b426e7e00)`,
          }}
        ></div>
        <div className="w-full p-8 lg:w-1/2">
          <p className="text-xl text-center text-gray-600">Welcome</p>
          <div className="mt-4">
            <label className="block mb-2 text-sm font-bold text-gray-700">
              Email Address
            </label>
            <input
              className="block w-full px-4 py-2 text-gray-700 border border-gray-300 rounded focus:outline-2 focus:outline-blue-700"
              type="email"
              required
            />
          </div>
          <div className="flex flex-col justify-between mt-4">
            <div className="flex justify-between">
              <label className="block mb-2 text-sm font-bold text-gray-700">
                Password
              </label>
            </div>
            <input
              className="block w-full px-4 py-2 text-gray-700 border border-gray-300 rounded focus:outline-2 focus:outline-blue-700"
              type="password"
            />
            <a
              href="#"
              className="w-full mt-2 text-xs text-gray-500 hover:text-gray-900 text-end"
            >
              Forget Password?
            </a>
          </div>
          <div className="mt-8">
            <button className="w-full px-4 py-2 font-bold text-white bg-blue-700 rounded hover:bg-blue-600">
              Login
            </button>
          </div>
          <a
            href="#"
            className="flex items-center justify-center mt-4 text-white rounded-lg shadow-md hover:bg-gray-100"
          >
            <div className="flex justify-center w-full px-5 py-3">
              <div className="min-w-[30px]">
                <svg className="w-6 h-6" viewBox="0 0 40 40">
                  <path
                    d="M36.3425 16.7358H35V16.6667H20V23.3333H29.4192C28.045 27.2142 24.3525 30 20 30C14.4775 30 10 25.5225 10 20C10 14.4775 14.4775 9.99999 20 9.99999C22.5492 9.99999 24.8683 10.9617 26.6342 12.5325L31.3483 7.81833C28.3717 5.04416 24.39 3.33333 20 3.33333C10.7958 3.33333 3.33335 10.7958 3.33335 20C3.33335 29.2042 10.7958 36.6667 20 36.6667C29.2042 36.6667 36.6667 29.2042 36.6667 20C36.6667 18.8825 36.5517 17.7917 36.3425 16.7358Z"
                    fill="#FFC107"
                  />
                  <path
                    d="M5.25497 12.2425L10.7308 16.2583C12.2125 12.59 15.8008 9.99999 20 9.99999C22.5491 9.99999 24.8683 10.9617 26.6341 12.5325L31.3483 7.81833C28.3716 5.04416 24.39 3.33333 20 3.33333C13.5983 3.33333 8.04663 6.94749 5.25497 12.2425Z"
                    fill="#FF3D00"
                  />
                  <path
                    d="M20 36.6667C24.305 36.6667 28.2167 35.0192 31.1742 32.34L26.0159 27.975C24.3425 29.2425 22.2625 30 20 30C15.665 30 11.9842 27.2359 10.5975 23.3784L5.16254 27.5659C7.92087 32.9634 13.5225 36.6667 20 36.6667Z"
                    fill="#4CAF50"
                  />
                  <path
                    d="M36.3425 16.7358H35V16.6667H20V23.3333H29.4192C28.7592 25.1975 27.56 26.805 26.0133 27.9758C26.0142 27.975 26.015 27.975 26.0158 27.9742L31.1742 32.3392C30.8092 32.6708 36.6667 28.3333 36.6667 20C36.6667 18.8825 36.5517 17.7917 36.3425 16.7358Z"
                    fill="#1976D2"
                  />
                </svg>
              </div>
              <div className="flex justify-center w-full">
                <h1 className="font-bold text-gray-600 whitespace-nowrap">
                  Sign in with Google
                </h1>
              </div>
            </div>
          </a>
          <div className="flex items-center w-full mt-4 text-center">
            <a
              href="#"
              className="w-full text-xs text-center text-gray-500 capitalize"
            >
              Don&apos;t have any account yet?
              <Link to={`/signup`}><span className="text-blue-700"> Sign Up</span></Link>
            </a>
          </div>
        </div>
      </div>
    </div>
  );
};
export default LoginWithGoogleButton;
